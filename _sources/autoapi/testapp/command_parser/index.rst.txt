testapp.command_parser
======================

.. py:module:: testapp.command_parser


Classes
-------

.. autoapisummary::

   testapp.command_parser.CommandParser


Module Contents
---------------

.. py:class:: CommandParser

   CommandParser 클래스는 명령어를 파싱하고 유효성을 검사하며, 적절한 명령어 객체를 반환하는 기능을 제공합니다.


   .. py:attribute:: cmd_if_dict


   .. py:method:: is_predefined_command(name: str) -> bool
      :classmethod:


      주어진 이름이 사전 정의된 명령어인지 확인합니다.

      :param name: 확인할 명령어 이름
      :type name: str

      :returns: 사전 정의된 명령어이면 True, 그렇지 않으면 False
      :rtype: bool



   .. py:method:: validate_command(cmd: str) -> bool
      :classmethod:


      주어진 명령어의 유효성을 검사합니다.

      :param cmd: 검사할 명령어
      :type cmd: str

      :returns: 유효한 명령어이면 True, 그렇지 않으면 False
      :rtype: bool



   .. py:method:: parse_args(cmd: str) -> tuple[str, list[str]] | tuple[str, list[Any]]
      :staticmethod:


      주어진 명령어를 파싱하여 옵션과 인자를 반환합니다.

      :param cmd: 파싱할 명령어
      :type cmd: str

      :returns: 명령 옵션과 인자 리스트의 튜플
      :rtype: tuple[str, list[str]] | tuple[str, list[Any]]



   .. py:method:: get_command(cmd_option: str) -> testapp.command.__interface.CommandInterface
      :classmethod:


      주어진 명령 옵션에 해당하는 명령어 객체를 반환합니다.

      :param cmd_option: 명령 옵션
      :type cmd_option: str

      :returns: 명령어 객체
      :rtype: command.Command



